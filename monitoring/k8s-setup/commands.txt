1. kubectl apply -f monitoring/namespace.yml
2. helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
3. helm repo add kube-state-metrics https://kubernetes.github.io/kube-state-metrics
4. helm upgrade -i prometheus prometheus-community/prometheus --namespace monitoring -f prometheus/values.yml
5. kubectl apply -f monitoring/grafana/config.yml
6. helm repo add grafana https://grafana.github.io/helm-charts
7. helm install grafana --namespace monitoring grafana/grafana --set rbac.pspEnabled=false
################
# during class #
################
8. kubectl get secret --namespace monitoring grafana -o jsonpath="{.data.admin-password}" | base64 --decode ; echo
9. kubectl -n monitoring port-forward svc/grafana 3000:80 
10. kubectl -n monitoring port-forward svc/prometheus-prometheus-node-exporter 9100:9100 
11. kubectl -n monitoring port-forward svc/prometheus-prometheus-pushgateway 9091:9091
12. kubectl -n monitoring port-forward svc/prometheus-server 9090:80 
13: echo "some_metric 52" | curl --data-binary @- http://localhost:9091/metrics/job/some_job/a/b
14. helm install my-release oci://registry-1.docker.io/bitnamicharts/redis --set metrics.enabled=true
15. kubectl port-forward svc/my-release-redis-metrics 9121:9121
16. kubectl -n monitoring port-forward svc/prometheus-alertmanager 9093:9093
17. kubectl -n monitoring port-forward svc/prometheus-prometheus-pushgateway 9091:9091

kubectl patch ds prometheus-prometheus-node-exporter --type "json" -p '[{"op": "remove", "path" : "/spec/template/spec/containers/0/volumeMounts/2/mountPropagation"}]' -n monitoring
